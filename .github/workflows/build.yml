name: build_release

on:
  push: 
    branches: [ "*" ]
  pull_request:
    branches: [ main ]

env:
  # GitHub runners have two cores each
  MAKEFLAGS: -j3

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Check out source"
      uses: actions/checkout@v2
    - run: ./build.sh host_binutils
    - run: ./build.sh host_gmp
    - run: ./build.sh host_mpfr
    - run: ./build.sh host_mpc
    - run: ./build.sh linux-headers
    - run: ./build.sh host_gcc
    - run: ldd toolchain/usr/bin/i686-linux-gnu-gcc
    - run: ./build.sh glibc_bootstrap
    - run: ./build.sh libgcc
    - run: ./build.sh glibc_final
    - run: ./build.sh zlib
    - run: ./build.sh libpthread-stubs
    - run: ./build.sh inputproto
    - run: ./build.sh kbproto
    - run: ./build.sh xextproto
    - run: ./build.sh util-macros
    - run: ./build.sh xproto
    - run: ./build.sh xcb-proto
    - run: ./build.sh xtrans
    - run: ./build.sh libice
    - run: ./build.sh libsm
    - run: ./build.sh libxau
    - run: ./build.sh libxcb
    - run: ./build.sh libx11
    - run: ./build.sh libxt
    - run: ./build.sh libxext
    - run: ./build.sh libxi
    - run: ./build.sh glib
    - run: ./build.sh gtk+
    - run: ./build.sh libtool
    - run: ./build.sh alsa-lib
    - run: ./build.sh libsndfile
    - run: ./build.sh pulseaudio
    - run: ./build.sh sdl
    - run: ./build.sh host_patchelf
    - run: ./build.sh lc2e
    - id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - uses: actions/upload-artifact@v2
      with:
        name: dstation-anywhere-${{ steps.vars.outputs.sha_short }}
        path: dockingstation_195_64
    - if: always()
      run: tar cf toolchain.tar.bz2 toolchain
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: toolchain
        path: toolchain.tar.bz2